use_modular_headers!

# platform :ios, '13.4'

# # Giải quyết react_native_pods.rb với node để cho phép hoisting
# require Pod::Executable.execute_command('node', ['-p',
#   'require.resolve(
#     "react-native/scripts/react_native_pods.rb",
#     {paths: [process.argv[1]]},
#   )', __dir__]).strip

# # Tùy chọn cho Flipper
# flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

# # Cấu hình linkage
# linkage = ENV['USE_FRAMEWORKS']
# if linkage != nil
#   Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
#   use_frameworks! :linkage => linkage.to_sym
# end

# # Sử dụng Flipper
# # use_react_native!(
# #   :flipper_configuration => flipper_config,
# # )

# # Target chính
# target 'T_Smart' do
#   # Sử dụng native modules và frameworks tĩnh
#   config = use_native_modules!
#   # use_frameworks! :linkage => :static
#   $RNFirebaseAsStaticFramework = true


#   # Cấu hình React Native
#   use_react_native!(
#     :path => config[:reactNativePath],
#     # :flipper_configuration => flipper_config,
#     :app_path => "#{Pod::Config.instance.installation_root}/.."
#   )

#   # Hook post_install cho React Native
#   use_flipper!()

#   post_install do |installer|
#     react_native_post_install(installer)
#       installer.pods_project.targets.each do |target|
#           target.build_configurations.each do |config|
#             config.build_settings["ONLY_ACTIVE_ARCH"] = "NO"
#           end
#       end
#   end

#   # Thêm CocoaAsyncSocket vào phần target
#   pod 'CocoaAsyncSocket'
#   pod 'Firebase/Core'
  


#   # Target cho testing
#   target 'T_SmartTests' do
#     inherit! :complete
#     # Các Pods cho testing
#   end
# end



# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'T_Smart' do
  config = use_native_modules!
    $RNFirebaseAsStaticFramework = true


  use_react_native!(
    :path => config[:reactNativePath],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    # :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )



  # use_flipper!()

  post_install do |installer|
    react_native_post_install(installer)
      installer.pods_project.targets.each do |target|
          target.build_configurations.each do |config|
            config.build_settings["ONLY_ACTIVE_ARCH"] = "NO"
          end
      end
  end
    pod 'CocoaAsyncSocket'
  pod 'Firebase/Core'

    target 'T_SmartTests' do
    inherit! :complete
    # Pods for testing
  end
end



